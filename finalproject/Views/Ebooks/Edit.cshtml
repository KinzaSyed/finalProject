@model finalproject.Models.Ebooks_db

@{
    ViewBag.Title = "Edit";
}

<h2>Update E Book</h2>

@using (Html.BeginForm("Edit", "Ebooks", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Ebook_id)

    <div class="form-group">

        <label class="control-label col-md-2">EBook Name </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ebook_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ebook_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">EBook Edition</label>


        <div class="col-md-10">
            @Html.EditorFor(model => model.Ebook_edition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ebook_edition, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        <label class="control-label col-md-2">EBook Image </label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ebook_img, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ebook_img, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <label class="control-label col-md-2" for="email">Upload Image</label>
        <div class="col-md-10">
            <input type="file" name="imagefile" id="imagefile" class="form-control" />

        </div>


    </div>

    <div class="form-group">
        <label class="control-label col-md-2">EBook PDF</label>
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Ebook_pdffile, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ebook_pdffile, "", new { @class = "text-danger" })*@

            <input type="file" name="pdffile" id="pdffile" class="form-control" />


        </div>
    </div>

    <div class="form-group">

        <label class="control-label col-md-2">EBook Author</label>

        <div class="col-md-10">
            @Html.EditorFor(model => model.Ebook_author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ebook_author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">EBook Publisher</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ebook_publisher, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ebook_publisher, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">EBook Category </label>
        <div class="col-md-10">
            @Html.DropDownList("cat_id", ViewBag.catlist as SelectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.cat_id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
    <div class="col-md-4">
        <div class="thumb">
            <img class="img-thumbnail img-fluid" id="productImage" src="@Url.Content(Model.Ebook_img)" />
        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
